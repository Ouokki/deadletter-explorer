name: CI - Build & SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  SONAR_HOST_URL: https://sonarcloud.io

jobs:
  backend:
    name: Backend - build & SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Sonar variables (backend)
        run: |
          [ -n "${{ vars.SONAR_ORG }}" ] || { echo "Missing Actions Variable: SONAR_ORG"; exit 1; }
          [ -n "${{ vars.SONAR_BACKEND_KEY }}" ] || { echo "Missing Actions Variable: SONAR_BACKEND_KEY"; exit 1; }
          echo "ORG=${{ vars.SONAR_ORG }}"
          echo "PROJECT_KEY=${{ vars.SONAR_BACKEND_KEY }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # For external PRs (from forks), run tests but skip Sonar (no secrets).
      - name: Build & Test (external PRs - no Sonar)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
        working-directory: backend
        run: |
          mvn -B clean verify
          test -f target/site/jacoco/jacoco.xml && echo "JaCoCo report present ✅" || { echo "Missing JaCoCo report ❌"; exit 1; }

      # For push + internal PRs, run Sonar with coverage
      - name: Build + SonarCloud (internal)
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        working-directory: backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.organization=${{ vars.SONAR_ORG }} \
            -Dsonar.projectKey=${{ vars.SONAR_BACKEND_KEY }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.coverage.exclusions=src/main/java/**/dto/**
          test -f target/site/jacoco/jacoco.xml && echo "JaCoCo report present ✅" || { echo "Missing JaCoCo report ❌"; exit 1; }

  frontend:
    name: Frontend - build & SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Sonar variables (frontend)
        run: |
          [ -n "${{ vars.SONAR_ORG }}" ] || { echo "Missing Actions Variable: SONAR_ORG"; exit 1; }
          [ -n "${{ vars.SONAR_FRONTEND_KEY }}" ] || { echo "Missing Actions Variable: SONAR_FRONTEND_KEY"; exit 1; }
          echo "ORG=${{ vars.SONAR_ORG }}"
          echo "PROJECT_KEY=${{ vars.SONAR_FRONTEND_KEY }}"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        run: npm run build

      # Optional: uncomment to publish JS/TS coverage
      # - name: Test with coverage
      #   working-directory: frontend
      #   run: npm test -- --coverage

      - name: Generate Sonar config (frontend)
        working-directory: frontend
        run: |
          printf "%s\n" \
            "sonar.host.url=${{ env.SONAR_HOST_URL }}" \
            "sonar.organization=${{ vars.SONAR_ORG }}" \
            "sonar.projectKey=${{ vars.SONAR_FRONTEND_KEY }}" \
            "sonar.sources=src" \
            "sonar.tests=src" \
            "sonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/*.test.js,**/*.spec.js,**/*.test.jsx,**/*.spec.jsx" \
            "sonar.exclusions=**/node_modules/**,**/dist/**,**/build/**,**/coverage/**" \
            "sonar.javascript.lcov.reportPaths=coverage/lcov.info" \
            > sonar-project.properties
          echo "Generated frontend/sonar-project.properties:"
          cat sonar-project.properties

      - name: SonarCloud analyze
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: External PR - skip SonarCloud
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
        run: echo "External PR - skipping SonarCloud (no secrets on forks)"
